func factorial(value)
    if value <= 1 then
        return 1
    end
    return value * factorial(value - 1)
end

var Vec2 = { "__name" = "Vec2" }

func Vec2.new(x, y)
    var self = {} 
    self.__prototype = Vec2

    self.x = x
    self.y = y
    return self
end

func Vec2:__string()
    return format("({1}, {2})", self.x, self.y)
end

func Vec2:__add(other)
    return Vec2.new(self.x + other.x, self.y + other.y)
end

func Vec2:__sub(other)
    return Vec2.new(self.x - other.x, self.y - other.y)
end

func Vec2:__mul(other)
    return Vec2.new(self.x * other, self.y * other)
end

func Vec2:__div(other)
    return Vec2.new(self.x / other, self.y / other)
end

var position = Vec2.new(0, 0)

callback_signal:listen(func(call_count)
    position.x += 20
    position.y += 20
    print(format("Call #{1}: {2}", call_count, position:__string()))
end)
